{"filter":false,"title":"App.js","tooltip":"/App.js","undoManager":{"mark":2,"position":2,"stack":[[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":8,"column":0}},"nl":"\n","lines":["Ext.define('CustomApp', {","    extend: 'Rally.app.App',","    componentCls: 'app',","    items:{ html:'<a href=\"https://help.rallydev.com/apps/2.0rc3/doc/\">App SDK 2.0rc3 Docs</a>'},","    launch: function() {","        //Write app code here","    }","});"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":25}},"text":"Ext.define('CustomApp', {"},{"action":"insertText","range":{"start":{"row":0,"column":25},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":38,"column":0}},"lines":["    extend: 'Rally.app.App',","    componentCls: 'app',","    ","    launch: function() {","    \tconsole.log ('Our First App woot!');","    \tthis._loadData();","    },","","    //Get Data from Rally","\t_loadData: function() {","\t\tvar myStore = Ext.create ('Rally.data.wsapi.Store', {","            model: 'User Story',","            autoLoad: true,","            listeners: {","                load: function (myStore, myData, success) {","                    console.log ('got data', myStore, myData, success);","                    this._loadGrid(myStore);","                },","        \t\tscope: this","            },","            fetch: ['FormattedID', 'Name', 'ScheduleState']","        });","\t},","    ","    // Create & show a Grid of given stories","    _loadGrid: function(myStoryStore) {","        var myGrid = Ext.create('Rally.ui.grid.Grid', {","        \tstore: myStoryStore,","        \tcolumnCfgs: [","        \t   'FormattedID', 'Name', 'ScheduleState'          ","        \t]                    \t","        });","        console.log ('my grid', myGrid);","        this.add(myGrid);","        console.log ('what is this?', this);","    }   ","});"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":38,"column":0}},"nl":"\n","lines":["Ext.define('CustomApp', {","    extend: 'Rally.app.App',","    componentCls: 'app',","    ","    launch: function() {","    \tconsole.log ('Our First App woot!');","    \tthis._loadData();","    },","","    //Get Data from Rally","\t_loadData: function() {","\t\tvar myStore = Ext.create ('Rally.data.wsapi.Store', {","            model: 'User Story',","            autoLoad: true,","            listeners: {","                load: function (myStore, myData, success) {","                    console.log ('got data', myStore, myData, success);","                    this._loadGrid(myStore);","                },","        \t\tscope: this","            },","            fetch: ['FormattedID', 'Name', 'ScheduleState']","        });","\t},","    ","    // Create & show a Grid of given stories","    _loadGrid: function(myStoryStore) {","        var myGrid = Ext.create('Rally.ui.grid.Grid', {","        \tstore: myStoryStore,","        \tcolumnCfgs: [","        \t   'FormattedID', 'Name', 'ScheduleState'          ","        \t]                    \t","        });","        console.log ('my grid', myGrid);","        this.add(myGrid);","        console.log ('what is this?', this);","    }   ","});"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":25}},"text":"Ext.define('CustomApp', {"},{"action":"insertText","range":{"start":{"row":0,"column":25},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":37,"column":0}},"lines":["    extend: 'Rally.app.App',","    componentCls: 'app',","    ","    launch: function() {","    \tconsole.log ('Our Second App!');","    \tthis._loadData();","    },","","    //Get Data from Rally","\t_loadData: function() {","\t\tvar myStore = Ext.create ('Rally.data.wsapi.Store', {","            model: 'Defect',","            autoLoad: true,","            listeners: {","                load: function (myStore, myData, success) {","                    console.log ('got data', myStore, myData, success);","                    this._loadGrid(myStore);","                },","        \t\tscope: this","            },","            fetch: ['FormattedID', 'Name', 'Severity', 'Iteration']","        });","\t},","    ","    // Create & show a Grid of given stories","    _loadGrid: function(myStoryStore) {","        var myGrid = Ext.create('Rally.ui.grid.Grid', {","        \tstore: myStoryStore,","        \tcolumnCfgs: [","        \t   'FormattedID', 'Name', 'Severity', 'Iteration'          ","        \t]                    \t","        });","        console.log ('my grid', myGrid);","        this.add(myGrid);","    }   ","});"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":37,"column":0}},"nl":"\n","lines":["Ext.define('CustomApp', {","    extend: 'Rally.app.App',","    componentCls: 'app',","    ","    launch: function() {","    \tconsole.log ('Our Second App!');","    \tthis._loadData();","    },","","    //Get Data from Rally","\t_loadData: function() {","\t\tvar myStore = Ext.create ('Rally.data.wsapi.Store', {","            model: 'Defect',","            autoLoad: true,","            listeners: {","                load: function (myStore, myData, success) {","                    console.log ('got data', myStore, myData, success);","                    this._loadGrid(myStore);","                },","        \t\tscope: this","            },","            fetch: ['FormattedID', 'Name', 'Severity', 'Iteration']","        });","\t},","    ","    // Create & show a Grid of given stories","    _loadGrid: function(myStoryStore) {","        var myGrid = Ext.create('Rally.ui.grid.Grid', {","        \tstore: myStoryStore,","        \tcolumnCfgs: [","        \t   'FormattedID', 'Name', 'Severity', 'Iteration'          ","        \t]                    \t","        });","        console.log ('my grid', myGrid);","        this.add(myGrid);","    }   ","});"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":25}},"text":"Ext.define('CustomApp', {"},{"action":"insertText","range":{"start":{"row":0,"column":25},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":112,"column":0}},"lines":["    extend: 'Rally.app.App',","    componentCls: 'app',","    ","\tmyStore: undefined,","\tmyGrid: undefined,","\t","    launch: function() {","    \tconsole.log ('Our Second App!');","\t\tthis.pulldownContainer = Ext.create('Ext.container.Container', {","\t\t\tid: 'pulldown-container-id',","\t\t\tlayout: {","\t\t\t\ttype: 'hbox',","\t\t\t\talign: 'stretch'","\t\t\t}","\t\t});","\t\tthis.add(this.pulldownContainer);","\t\tthis._loadIterations();","    },","\t","\t_loadIterations: function() {","\t\tthis.iterComboBox = Ext.create ('Rally.ui.combobox.IterationComboBox', {","\t\t\tfieldLabel: 'Iteration',","\t\t\tlabelAlign: 'right',","\t\t\twidth: 300,","\t\t\tlisteners: {","\t\t\t\tready: function(combobox){","\t\t\t\t\tthis._loadSeverities();","\t\t\t\t},","\t\t\t\tselect: function(combobox, records) {","\t\t\t\t\tthis._loadData();","\t\t\t\t},","\t\t\t\tscope: this","\t\t\t}","\t\t});","\t\tthis.pulldownContainer.add(this.iterComboBox);","\t},","\t_loadSeverities: function() {","\t\tthis.severityComboBox = Ext.create ('Rally.ui.combobox.FieldValueComboBox', {","\t\t\tmodel: 'Defect',","\t\t\tfield: 'Severity',","\t\t\tfieldLabel: 'Severity',","\t\t\tlabelAlign: 'right',","\t\t\tlisteners: {","\t\t\t\tready: function(combobox){","\t\t\t\t\tthis._loadData();","\t\t\t\t},","\t\t\t\tselect: function(combobox, records) {","\t\t\t\t\tthis._loadData();","\t\t\t\t},","\t\t\t\tscope: this","\t\t\t}","\t\t});","\t\tthis.pulldownContainer.add(this.severityComboBox);","\t},","","    //Get Data from Rally","\t_loadData: function() {","\t\tvar selectedIterRef = this.iterComboBox.getRecord().get('_ref');","\t\tvar selectedSeverityValue = this.severityComboBox.getRecord().get('value');","\t\tconsole.log('selected severity', selectedSeverityValue);","\t\tconsole.log('selected iter', selectedIterRef);","\t\tvar myFilters = [","\t\t\t{","\t\t\t\tproperty: 'Iteration',","\t\t\t\toperation: '=',","\t\t\t\tvalue: selectedIterRef","\t\t\t},","\t\t\t{","\t\t\t\tproperty: 'Severity',","\t\t\t\toperation: '=',","\t\t\t\tvalue: selectedSeverityValue","\t\t\t}","\t\t];","\t\t//if store exists, just load the new data","\t\tif (this.defectStore) {","\t\t\tconsole.log('store exists');","\t\t\tthis.defectStore.setFilter(myFilters);","\t\t\tthis.defectStore.load();","\t\t}","\t\t//create store","\t\telse {","\t\t\tconsole.log('creating store');","\t\t\tthis.defectStore = Ext.create ('Rally.data.wsapi.Store', {","\t\t\t\tmodel: 'Defect',","\t\t\t\tautoLoad: true,","\t\t\t\tfilters: myFilters,\t\t\t","\t\t\t\tlisteners: {","\t\t\t\t\tload: function (myStore, myData, success) {","\t\t\t\t\t\tconsole.log ('got data', myStore, myData, success);","\t\t\t\t\t\tif (!this.myGrid)","\t\t\t\t\t\t\tthis._createGrid(myStore);","\t\t\t\t\t},","\t\t\t\t\tscope: this","\t\t\t\t},","\t\t\t\tfetch: ['FormattedID', 'Name', 'Severity', 'Iteration']","\t\t\t});","\t\t}","\t},","    ","    // Create & show a Grid of given stories","    _createGrid: function(myDefectStore) {","        this.myGrid = Ext.create('Rally.ui.grid.Grid', {","        \tstore: myDefectStore,","        \tcolumnCfgs: [","        \t   'FormattedID', 'Name', 'Severity', 'Iteration'          ","        \t]                    \t","        });","        console.log ('my grid', this.myGrid);","        this.add(this.myGrid);","    }   ","});"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":112,"column":0},"end":{"row":112,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1405942153366,"hash":"b3c3a0298b577595740b32313c450ab2127660cc"}